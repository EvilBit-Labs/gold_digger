name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features: [ssl, ssl-rustls, none]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Install just
        uses: extractions/setup-just@v3

      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Install cargo-dist
        run: cargo binstall cargo-dist --no-confirm

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --check

      - name: Run clippy
        shell: bash
        run: |
          if [ "${{ matrix.features }}" = "none" ]; then
            cargo clippy --no-default-features --features "json csv additional_mysql_types verbose"
          else
            cargo clippy --no-default-features --features "json csv ${{ matrix.features }} additional_mysql_types verbose"
          fi

      - name: Run tests
        shell: bash
        run: |
          if [ "${{ matrix.features }}" = "none" ]; then
            cargo test --no-default-features --features "json csv additional_mysql_types verbose"
          else
            cargo test --no-default-features --features "json csv ${{ matrix.features }} additional_mysql_types verbose"
          fi

      - name: Build release and validate
        shell: bash
        run: |
          if [ "${{ matrix.features }}" = "none" ]; then
            cargo build --release --no-default-features --features "json csv additional_mysql_types verbose"
          else
            cargo build --release --no-default-features --features "json csv ${{ matrix.features }} additional_mysql_types verbose"
          fi
          ~/.cargo/bin/cargo-dist plan --output-format=json > /dev/null
