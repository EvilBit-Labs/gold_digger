name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  # Code quality checks - only need to run once
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Install just
        uses: extractions/setup-just@v3

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --check

      - name: Run clippy
        run: cargo clippy --no-default-features --features "json csv ssl additional_mysql_types verbose"

  # Test no-SSL configuration (cross-platform covers SSL variants)
  test-no-ssl:
    runs-on: ubuntu-latest
    needs: quality

    steps:
      - uses: actions/checkout@v5

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run tests (no SSL)
        run: cargo nextest run --no-default-features --features "json csv additional_mysql_types verbose"

      - name: Build release (no SSL)
        run: cargo build --release --no-default-features --features "json csv additional_mysql_types verbose"

  # Test cross-platform configurations (SSL variants)
  cross-platform-test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            features: ssl
          - os: ubuntu-latest
            features: ssl-rustls
          - os: macos-latest
            features: ssl
          - os: windows-latest
            features: ssl
    runs-on: ${{ matrix.os }}
    needs: quality

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false # Disable caching to avoid leaking credentials

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run tests and build
        run: |
          if [ "${{ matrix.features }}" = "none" ]; then
            cargo nextest run --no-default-features --features "json csv additional_mysql_types verbose"
            cargo build --release --no-default-features --features "json csv additional_mysql_types verbose"
          else
            cargo nextest run --no-default-features --features "json csv ${{ matrix.features }} additional_mysql_types verbose"
            cargo build --release --no-default-features --features "json csv ${{ matrix.features }} additional_mysql_types verbose"
          fi

  # Generate coverage for all configurations
  coverage:
    runs-on: ubuntu-latest
    needs: cross-platform-test

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false # Disable caching to avoid leaking credentials

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Generate coverage
        run: cargo llvm-cov --workspace --lcov --output-path lcov.info --no-default-features --features "json csv ssl additional_mysql_types verbose"

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          fail_ci_if_error: false
