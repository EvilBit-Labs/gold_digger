name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read
  id-token: write

jobs:
  ci:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13, windows-2022]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    concurrency:
      group: ci-${{ github.ref }}-${{ matrix.os }}
      cancel-in-progress: true

    env:
      PRE_COMMIT_HOME: ${{ github.workspace }}/.cache/pre-commit

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Windows-specific setup for OpenSSL (needed by reqwest/native-tls)
      - name: Setup Windows dependencies
        if: runner.os == 'Windows'
        shell: bash
        run: |
          vcpkg install openssl:x64-windows-static
          {
            printf 'OPENSSL_DIR=C:\\vcpkg\\installed\\x64-windows-static\n'
            printf 'OPENSSL_STATIC=1\n'
            printf 'VCPKG_ROOT=C:\\vcpkg\n'
          } >> "$GITHUB_ENV"

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy,rustfmt

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Install nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest

      # Build dependencies first to avoid compilation issues during linting
      - name: Build project dependencies
        shell: bash
        run: cargo check --all-targets --all-features

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install pre-commit
        shell: bash
        run: python -m pip install pre-commit

      - name: Create pre-commit cache directory
        shell: bash
        run: mkdir -p "$PRE_COMMIT_HOME"

      - name: Pre-commit cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PRE_COMMIT_HOME }}
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Pre-commit validation
        shell: bash
        run: pre-commit run --show-diff-on-failure --color=always --all-files

      - name: Format check
        shell: bash
        run: just fmt-check

      - name: Lint check
        shell: bash
        run: just lint

      - name: Tests (nextest)
        shell: bash
        run: just test-nextest

      # Coverage - only run on Ubuntu
      - name: Install cargo-llvm-cov
        if: matrix.os == 'ubuntu-22.04'
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov

      - name: Coverage (llvm-cov)
        if: matrix.os == 'ubuntu-22.04'
        shell: bash
        run: just coverage-llvm

      - name: Upload coverage artifact
        if: matrix.os == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov
          path: lcov.info

      - name: Upload to Codecov
        if: matrix.os == 'ubuntu-22.04' && github.repository == 'UncleSp1d3r/gold_digger'
        uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          flags: unit
          fail_ci_if_error: false
          verbose: true
