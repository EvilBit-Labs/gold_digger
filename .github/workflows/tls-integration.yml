name: TLS Integration Tests

on:
  push:
    branches: [main]
    paths:
      - "src/tls.rs"
      - "tests/tls_*.rs"
      - "Cargo.toml"
  pull_request:
    branches: [main]
    paths:
      - "src/tls.rs"
      - "tests/tls_*.rs"
      - "Cargo.toml"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CI: true

jobs:
  # Test TLS functionality across platforms
  tls-cross-platform:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - uses: Swatinem/rust-cache@v2

      - name: Run TLS tests
        run: cargo nextest run --features "ssl" -E 'test(tls)'

      - name: Verify TLS dependencies
        run: |
          # Should have rustls dependencies
          cargo tree --features "ssl" | grep rustls
          # Should NOT have native-tls (rustls-only implementation)
          ! cargo tree --features "ssl" | grep "native-tls"

  # Test TLS CLI integration
  tls-cli-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: Build and test TLS CLI
        run: |
          cargo build --release --features "ssl"

          # Set up binary path with Windows .exe suffix detection
          BIN="./target/release/gold_digger"
          if [ -f "${BIN}.exe" ]; then
            BIN="${BIN}.exe"
          fi

          # Test help includes TLS flags
          "$BIN" --help | grep -E "(tls-ca-file|insecure-skip-hostname-verify|allow-invalid-certificate)"

          # Test mutual exclusion (should fail)
          echo "test" > /tmp/test.pem
          ! "$BIN" --tls-ca-file /tmp/test.pem --insecure-skip-hostname-verify --db-url "mysql://test" --query "SELECT 1" --output /tmp/test.json 2>/dev/null
