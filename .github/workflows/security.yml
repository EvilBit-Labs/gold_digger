name: Security

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  security-events: write

jobs:
  security-scan:
    name: Static & Supply Chain Security
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false # Disable caching to avoid leaking credentials

      - name: Setup Rust Environment
        uses: ./.github/actions/setup-rust
        with:
          components: "clippy"
          install-cargo-audit: "true"
          install-nextest: "false"

      - name: Install SARIF tools
        run: cargo +stable install clippy-sarif sarif-fmt

      - name: Clippy to SARIF (no warnings tolerated)
        uses: ./.github/actions/run-clippy
        with:
          features: "ssl-rustls,none"
          sarif-output: "true"
          sarif-prefix: "clippy"

      - name: Upload clippy SARIF (ssl-rustls)
        if: github.event.pull_request == null || github.event.pull_request.head.repo.full_name == github.repository
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: clippy-ssl-rustls.sarif
          category: clippy-ssl-rustls

      - name: Upload clippy SARIF (no-TLS)
        if: github.event.pull_request == null || github.event.pull_request.head.repo.full_name == github.repository
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: clippy-notls.sarif
          category: clippy-notls

      - name: Setup Security Tools
        uses: ./.github/actions/setup-security-tools

      - name: Generate SBOM (CycloneDX)
        run: |
          syft . -o cyclonedx-json=sbom.cdx.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-cyclonedx
          path: sbom.cdx.json

      - name: Vulnerability scan with grype
        run: |
          # Report all vulnerabilities but only fail on critical ones
          # This allows visibility into high-severity issues without blocking CI
          grype sbom.cdx.json --fail-on critical --output sarif --file results.sarif

      - name: Upload grype SARIF
        if: github.event.pull_request == null || github.event.pull_request.head.repo.full_name == github.repository
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

      - name: Cache cargo bin
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-bin-

      - name: cargo-audit
        run: cargo +stable audit

      - name: cargo-deny
        run: cargo +stable deny check
