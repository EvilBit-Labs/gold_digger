# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json
# CodeRabbit AI Code Review Configuration for Gold Digger
# https://docs.coderabbit.ai/guides/review-instructions

# Language and project context
language: en
tone_instructions: "Be thorough and focus on security and maintainability"
enable_free_tier: true
early_access: true

reviews:
  # Enable comprehensive review features
  profile: assertive
  request_changes_workflow: true
  high_level_summary: true
  poem: true
  review_status: true
  auto_apply_labels: true

  # Auto-reviews configuration
  auto_review:
    enabled: true
    drafts: false
    base_branches:
      - main
      - develop
  pre_merge_checks:
    docstrings:
      mode: warning
      threshold: 80
    title:
      mode: warning
      requirements: "Title should be concise and descriptive of the overall purpose of the code, and follow conventional commits."
    issue_assessment:
      mode: warning

  # Path-based review rules
  path_instructions:
    - path: "src/**"
      instructions: |
        Focus on Rust best practices, memory safety, and error handling.
        Pay special attention to:
        - Proper use of anyhow::Result for error propagation
        - Safe database value conversion (avoid panics on NULL values)
        - Feature-gated compilation patterns
        - Security: never log DATABASE_URL or credentials
        - Type safety with MySQL value conversions

    - path: "**/*.rs"
      instructions: |
        Review for:
        - Clippy compliance (zero warnings tolerance)
        - Proper error handling with anyhow
        - Safe pattern matching (avoid Some(&_), use Some(_))
        - Memory efficiency and avoiding unnecessary allocations
        - Documentation for public functions

    - path: ".github/workflows/**"
      instructions: |
        Review CI/CD workflows for:
        - Security best practices (no hardcoded secrets)
        - Cross-platform compatibility
        - Proper error handling and exit codes
        - Integration with justfile commands
        - OIDC authentication usage

    - path: "Cargo.toml"
      instructions: |
        Review dependency changes for:
        - Security implications
        - Feature flag consistency
        - Version compatibility
        - Minimal dependency principle

    - path: "tests/**"
      instructions: |
        Review tests for:
        - Comprehensive coverage of edge cases
        - Proper test isolation
        - Cross-platform compatibility
        - Security test scenarios
    - path: "docs/book/**"
      instructions: |
        Review documentation for:
        - Clarity and completeness
        - Cross-platform compatibility
        - Ease of use and usability
        - Tone, flow, and style guide adherence
        - Security best practices

# Review focus areas
focus_areas:
  - security
  - performance
  - maintainability
  - testing
  - documentation

# Custom instructions for specific patterns
custom_instructions: |
  ## Gold Digger Specific Review Guidelines

  ### Critical Security Patterns
  - NEVER allow DATABASE_URL to appear in logs, error messages, or debug output
  - Ensure all credential handling includes proper redaction
  - Verify TLS/SSL configuration uses mysql::SslOpts programmatically

  ### Database Safety Patterns
  - Flag any use of from_value::<String>() without NULL checking (causes panics)
  - Recommend SQL CAST(column AS CHAR) for type safety
  - Ensure mysql::Value::NULL is handled explicitly in all conversions

  ### Code Quality Standards
  - Verify 100-character line limit compliance
  - Check for proper anyhow::Result usage in fallible functions
  - Ensure feature gates are used correctly for conditional compilation
  - Validate proper exit code usage (not -1 or generic codes)

  ### Architecture Compliance
  - Verify CLI flags take precedence over environment variables
  - Check output format detection by file extension
  - Ensure justfile integration for CI parity
  - Validate cross-platform compatibility

# Exclude certain file types from review
exclude:
  - "target/**"
  - "**/*.lock"
  - ".kiro/hooks/**"

# Enable specific review types
enable_auto_security_review: true
enable_auto_incremental_review: true
enable_auto_review_triggers_on_push: true
