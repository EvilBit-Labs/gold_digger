name: "Run Clippy Linting"
description: "Run cargo clippy with specified feature combinations"

inputs:
  features:
    description: "Feature combinations to test (comma-separated)"
    required: false
    default: "native-tls,rustls,none"
  sarif-output:
    description: "Whether to generate SARIF output"
    required: false
    default: "false"
  sarif-prefix:
    description: "Prefix for SARIF output files"
    required: false
    default: "clippy"

runs:
  using: composite
  steps:
    - name: Run Clippy Linting
      shell: bash
      run: |
        set -o pipefail

        IFS=',' read -ra FEATURES <<< "${{ inputs.features }}"

        for feature in "${FEATURES[@]}"; do
          case "$feature" in
            "native-tls")
              echo "🔍 Running clippy with native-tls (ssl feature)..."
              if [[ "${{ inputs.sarif-output }}" == "true" ]]; then
                cargo clippy --all-targets --no-default-features --features "json csv ssl additional_mysql_types verbose" --message-format=json -- -D warnings \
                  | clippy-sarif \
                  | tee "${{ inputs.sarif-prefix }}-native-tls.sarif" \
                  | sarif-fmt
              else
                cargo clippy --all-targets --no-default-features --features "json csv ssl additional_mysql_types verbose" -- -D warnings
              fi
              ;;
            "rustls")
              echo "🔍 Running clippy with rustls (ssl-rustls feature)..."
              if [[ "${{ inputs.sarif-output }}" == "true" ]]; then
                cargo clippy --all-targets --no-default-features --features "json csv ssl-rustls additional_mysql_types verbose" --message-format=json -- -D warnings \
                  | clippy-sarif \
                  | tee "${{ inputs.sarif-prefix }}-rustls.sarif" \
                  | sarif-fmt
              else
                cargo clippy --all-targets --no-default-features --features "json csv ssl-rustls additional_mysql_types verbose" -- -D warnings
              fi
              ;;
            "none")
              echo "🔍 Running clippy without TLS features..."
              if [[ "${{ inputs.sarif-output }}" == "true" ]]; then
                cargo clippy --all-targets --no-default-features --features "json csv additional_mysql_types verbose" --message-format=json -- -D warnings \
                  | clippy-sarif \
                  | tee "${{ inputs.sarif-prefix }}-notls.sarif" \
                  | sarif-fmt
              else
                cargo clippy --all-targets --no-default-features --features "json csv additional_mysql_types verbose" -- -D warnings
              fi
              ;;
            *)
              echo "⚠️ Unknown feature: $feature"
              ;;
          esac
        done
